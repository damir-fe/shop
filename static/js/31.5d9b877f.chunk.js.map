{"version":3,"file":"static/js/31.5d9b877f.chunk.js","mappings":"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","sources":["component/Pages/Cart/Cart.js","../node_modules/uuid/dist/esm-browser/rng.js","hooks/usePagination.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/v4.js","component/Pagination/Pagination.js","component/productCard/ProductCard.js","hooks/useFetching.js"],"sourcesContent":["import React, {useEffect, useMemo, useState} from 'react';\r\nimport useFetch from \"../../../hooks/useFetching\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport ProductCard from \"../../productCard/ProductCard\";\r\nimport Pagination from \"../../Pagination/Pagination\";\r\n\r\nimport \"./Cart.scss\"\r\nimport axios from \"axios\";\r\n\r\nlet PageSize = 8;\r\n\r\nconst Cart = () => {\r\n    const { products, error, isLoading } = useFetch('http://localhost:3001/cart/');\r\n\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    \r\n    const countTotal = useMemo(() => {\r\n        return products.reduce((acc, n) => acc + n.price, 0);\r\n    }, [products]);\r\n\r\n    const currentTableData = useMemo(() => {\r\n        const firstPageIndex = (currentPage - 1) * PageSize;\r\n        const lastPageIndex = firstPageIndex + PageSize;\r\n        return products.slice(firstPageIndex, lastPageIndex);\r\n    }, [currentPage, products]);\r\n\r\n    // const deleteData = () => {\r\n        // const productsId = products.map(item =>\r\n        //     axios.delete(`http://localhost:3001/cart/${item.id}`).then(response => {\r\n        //         console.log('worked')\r\n        //     })\r\n        // );\r\n    // }\r\n    \r\n    const orderStart = () => {\r\n        alert('Оплата сюда: 88005553535')\r\n    }\r\n    \r\n    if (isLoading) {\r\n        return <div style={{textAlign: \"center\"}}>Загрузка..</div>\r\n    }\r\n    if (error) {\r\n        return <div><h1 style={{justifyContent: \"center\"}}>{error}</h1></div>\r\n    }\r\n    \r\n    return (\r\n        <div className=\"cart\">\r\n            {products.length <= 0\r\n                ? <Col sm=\"12\"><h1 style={{justifyContent: \"center\"}}>Корзина пуста</h1></Col>\r\n                :\r\n                <Container>\r\n                    <Row>\r\n                        <Col sm=\"12\"><h2>Сумма: {countTotal}</h2><span>,</span> <h2>Товаров: {products.length}</h2></Col>\r\n                        <Col sm=\"12\">\r\n                            <div className=\"cart__buttons\">\r\n                                <button className=\"cart__btn\" onClick={orderStart}>Оформить заказ</button>\r\n                                {/*<button className=\"cart__btn\" onClick={deleteData}>Очистить корзину</button>*/}\r\n                            </div>\r\n                        </Col>\r\n                        {currentTableData.map(product => (\r\n                            <Col\r\n                                sm=\"6\"\r\n                                lg=\"4\"\r\n                                xl=\"3\"\r\n                                key={product.id}\r\n                            >\r\n                                <ProductCard\r\n                                    url={product.url}\r\n                                    key={product.id}\r\n                                    name={product.name}\r\n                                    price={product.price}\r\n                                    color={product.color}\r\n                                    capacity={product.capacity}\r\n                                    id={product.id}\r\n                                />\r\n                            </Col>\r\n                        ))}\r\n                        <Col sm=\"12\">\r\n                            <Pagination\r\n                                className=\"pagination-bar\"\r\n                                currentPage={currentPage}\r\n                                totalCount={products.length}\r\n                                pageSize={PageSize}\r\n                                onPageChange={page => {\r\n                                    setCurrentPage(page)\r\n                                }}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Cart;","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import React from 'react';\r\nimport { useMemo } from 'react';\r\n\r\nexport const DOTS = '...';\r\n\r\nconst range = (start, end) => {\r\n    let length = end - start + 1;\r\n    return Array.from({ length }, (_, idx) => idx + start);\r\n};\r\n\r\nexport const usePagination = ({\r\n      totalCount,\r\n      pageSize,\r\n      siblingCount = 1,\r\n      currentPage\r\n    }) => {\r\n    const paginationRange = useMemo(() => {\r\n        const totalPageCount = Math.ceil(totalCount / pageSize);\r\n\r\n        // Pages count is determined as siblingCount + firstPage + lastPage + currentPage + 2*DOTS\r\n        const totalPageNumbers = siblingCount + 5;\r\n\r\n        /*\r\n          If the number of pages is less than the page numbers we want to show in our\r\n          paginationComponent, we return the range [1..totalPageCount]\r\n        */\r\n        if (totalPageNumbers >= totalPageCount) {\r\n            return range(1, totalPageCount);\r\n        }\r\n\r\n        const leftSiblingIndex = Math.max(currentPage - siblingCount, 1);\r\n        const rightSiblingIndex = Math.min(\r\n            currentPage + siblingCount,\r\n            totalPageCount\r\n        );\r\n\r\n        /*\r\n          We do not want to show dots if there is only one position left \r\n          after/before the left/right page count as that would lead to a change if our Pagination\r\n          component size which we do not want\r\n        */\r\n        const shouldShowLeftDots = leftSiblingIndex > 2;\r\n        const shouldShowRightDots = rightSiblingIndex < totalPageCount - 2;\r\n\r\n        const firstPageIndex = 1;\r\n        const lastPageIndex = totalPageCount;\r\n\r\n        if (!shouldShowLeftDots && shouldShowRightDots) {\r\n            let leftItemCount = 3 + 2 * siblingCount;\r\n            let leftRange = range(1, leftItemCount);\r\n\r\n            return [...leftRange, DOTS, totalPageCount];\r\n        }\r\n\r\n        if (shouldShowLeftDots && !shouldShowRightDots) {\r\n            let rightItemCount = 3 + 2 * siblingCount;\r\n            let rightRange = range(\r\n                totalPageCount - rightItemCount + 1,\r\n                totalPageCount\r\n            );\r\n            return [firstPageIndex, DOTS, ...rightRange];\r\n        }\r\n\r\n        if (shouldShowLeftDots && shouldShowRightDots) {\r\n            let middleRange = range(leftSiblingIndex, rightSiblingIndex);\r\n            return [firstPageIndex, DOTS, ...middleRange, DOTS, lastPageIndex];\r\n        }\r\n    }, [totalCount, pageSize, siblingCount, currentPage]);\r\n\r\n    return paginationRange;\r\n};\r\n","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import React from 'react';\r\nimport classnames from 'classnames';\r\nimport { usePagination, DOTS } from '../../hooks/usePagination';\r\nimport './Pagination.scss';\r\nimport {v4 as uuidv4} from \"uuid\";\r\nconst Pagination = props => {\r\n    const {\r\n        onPageChange,\r\n        totalCount,\r\n        siblingCount = 1,\r\n        currentPage,\r\n        pageSize,\r\n        className\r\n    } = props;\r\n\r\n    const paginationRange = usePagination({\r\n        currentPage,\r\n        totalCount,\r\n        siblingCount,\r\n        pageSize\r\n    });\r\n\r\n    if (currentPage === 0 || paginationRange.length < 2) {\r\n        return null;\r\n    }\r\n\r\n    const onNext = () => {\r\n        onPageChange(currentPage + 1);\r\n    };\r\n\r\n    const onPrevious = () => {\r\n        onPageChange(currentPage - 1);\r\n    };\r\n\r\n    let lastPage = paginationRange[paginationRange.length - 1];\r\n    return (\r\n        <ul\r\n            className={classnames('pagination-container', { [className]: className })}\r\n        >\r\n            <li\r\n                className={classnames('pagination-item', {\r\n                    disabled: currentPage === 1\r\n                })}\r\n                onClick={onPrevious}\r\n            >\r\n                <div className=\"arrow left\" />\r\n            </li>\r\n            {paginationRange.map(pageNumber => {\r\n                if (pageNumber === DOTS) {\r\n                    return <li className=\"pagination-item dots\">&#8230;</li>;\r\n                }\r\n\r\n                return (\r\n                    <li\r\n                        className={classnames('pagination-item', {\r\n                            selected: pageNumber === currentPage\r\n                        })}\r\n                        onClick={() => onPageChange(pageNumber)}\r\n                        key={uuidv4()}\r\n                    >\r\n                        {pageNumber}\r\n                    </li>\r\n                );\r\n            })}\r\n            <li\r\n                className={classnames('pagination-item', {\r\n                    disabled: currentPage === lastPage\r\n                })}\r\n                onClick={onNext}\r\n            >\r\n                <div className=\"arrow right\" />\r\n            </li>\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default Pagination;\r\n","import React from 'react';\r\nimport './ProductCard.scss'\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nconst ProductCard = (props) => {\r\n    const navigate = useNavigate();\r\n    return (\r\n        <div \r\n            onClick={() => navigate(`/${props.id}`)} \r\n            className=\"product-card\"\r\n        >\r\n            <div className=\"product-card__img\">\r\n                <img src={props.url} alt={props.name}/>\r\n            </div>\r\n            <div className=\"product-card__title\">{props.name}, {props.capacity}ГБ, {props.color}</div>\r\n            <div className=\"product-card__price\">{props.price} &#8381;</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProductCard;","import axios from \"axios\"\r\nimport { useEffect, useState } from \"react\"\r\n\r\nconst useFetch = url => {\r\n    const [products, setProducts] = useState([])\r\n    const [error, setError] = useState(\"\")\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true)\r\n        axios\r\n            .get(url)\r\n            .then(response => {\r\n                setProducts(response.data)\r\n                setIsLoading(false)\r\n            })\r\n            .catch(error => {\r\n                setError(\"Что-то пошло не так...\")\r\n                setIsLoading(false)\r\n            })\r\n            .finally(() => {\r\n                setIsLoading(false)\r\n            })\r\n    }, [url])\r\n\r\n    return { products, error, isLoading }\r\n}\r\n\r\nexport default useFetch"],"names":["_useFetch","useFetch","products","error","isLoading","_useState","useState","_useState2","_slicedToArray","currentPage","setCurrentPage","countTotal","useMemo","reduce","acc","n","price","currentTableData","firstPageIndex","lastPageIndex","slice","_jsx","style","textAlign","children","justifyContent","className","length","Col","sm","Container","_jsxs","Row","onClick","alert","map","product","lg","xl","ProductCard","url","name","color","capacity","id","Pagination","totalCount","pageSize","onPageChange","page","getRandomValues","DOTS","range","start","end","Array","from","_","idx","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","uuid","REGEX","byteToHex","i","push","toString","substr","arr","offset","arguments","undefined","toLowerCase","validate","TypeError","options","buf","rnds","random","stringify","props","_props$siblingCount","siblingCount","paginationRange","_ref","_ref$siblingCount","totalPageCount","Math","ceil","leftSiblingIndex","max","rightSiblingIndex","min","shouldShowLeftDots","shouldShowRightDots","leftRange","concat","_toConsumableArray","rightRange","middleRange","usePagination","lastPage","classnames","_defineProperty","disabled","pageNumber","selected","uuidv4","navigate","useNavigate","src","alt","setProducts","_useState3","_useState4","setError","_useState5","_useState6","setIsLoading","useEffect","axios","then","response","data","catch","finally"],"sourceRoot":""}